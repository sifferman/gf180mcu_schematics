name: Test on Push

on:
  push:
  workflow_call:

permissions:
  contents: write

jobs:
  build-and-release:
    env:
      tools: ${{ github.workspace }}/tools
      git: ${{ github.workspace }}/git
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create build dirs
        run: |
          mkdir -p ${{ env.tools }}
          mkdir -p ${{ env.git }}

      - name: Install apt packages
        run: |
          sudo add-apt-repository ppa:inkscape.dev/stable
          sudo apt-get update
          sudo apt-get install -y libtool-bin
          sudo apt-get install -y tcl-dev tk-dev libcairo-dev
          sudo apt-get install -y python3 libxaw7-dev libreadline6-dev
          sudo apt-get install -y libxpm-dev libx11-dev flex
          sudo apt-get install -y inkscape

      - name: Install xschem
        run: |
          cd ${{ env.git }}
          git clone --branch 3.4.6 --depth 1 https://github.com/StefanSchippers/xschem.git
          cd xschem
          ./configure --prefix=${{ env.tools }}/xschem
          make -j`nproc`
          make install
          echo "${{ env.tools }}/xschem/bin" >> $GITHUB_PATH

      - name: Install netgen
        run: |
          cd ${{ env.git }}
          git clone --depth 1 https://github.com/RTimothyEdwards/netgen.git
          cd netgen
          ./configure --prefix=${{ env.tools }}/netgen
          make -j`nproc`
          make install
          echo "${{ env.tools }}/netgen/bin" >> $GITHUB_PATH

      - name: Install magic
        run: |
          git clone --depth 1 https://github.com/RTimothyEdwards/magic
          cd magic
          ./configure --prefix=${{ env.tools }}/magic
          make -j`nproc`
          make install
          echo "${{ env.tools }}/magic/bin" >> $GITHUB_PATH

      - name: Generate PDK files
        run: |
          git clone --depth 1 git://opencircuitdesign.com/open_pdks
          cd open_pdks
          ./configure \
           --prefix=${{ env.tools }}/open_pdks \
           --disable-klayout \
           --enable-magic \
           --disable-irsim \
           --disable-openlane \
           --disable-qflow \
           --disable-xcircuit \
           --enable-gf180mcu-pdk \
           --with-gf180mcu-variants=A \
           --disable-verification-gf180mcu \
           --disable-io-gf180mcu \
           --disable-sram-gf180mcu \
           --disable-osu-sc-gf180mcu
          make -j`nproc`
          make install
          make veryclean

      - name: LVS
        run: |
          export PDK_ROOT=${{ env.tools }}/open_pdks/share/pdk
          make all_lvs

      - name: Generate SVGs
        run: |
          export PDK_ROOT=${{ env.tools }}/open_pdks/share/pdk
          make all_svg

      - name: Tar
        if: github.ref == 'refs/heads/main'
        run: |
          cd svg
          tar -czf cells.tar.gz *

      - name: Checkout gf180mcu cells repository
        if: github.ref == 'refs/heads/main'
        uses: actions/checkout@v4
        with:
          repository: fossi-foundation/globalfoundries-pdk-libs-gf180mcu_fd_sc_mcu7t5v0
          path: gf180mcu_fd_sc_mcu7t5v0

      - name: Generate progress report
        if: github.ref == 'refs/heads/main'
        run: |
          python3 docs/generate_progress_svg.py gf180mcu_fd_sc_mcu7t5v0/cells schematics progress.svg

      - name: Create Tag
        if: github.ref == 'refs/heads/main'
        run: |
          echo "TAG_NAME=$(date +%Y.%m.%d.%H.%M)" >> "$GITHUB_ENV"
          git tag ${{ env.TAG_NAME }}
          git push origin ${{ env.TAG_NAME }}

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: True
          omitBody: True
          tag: ${{ env.TAG_NAME }}
          artifacts: |
            svg/cells.tar.gz
            progress.svg
          token: ${{ secrets.GITHUB_TOKEN }}
