name: Test on Pull Request

on:
  pull_request_target:
  workflow_call:

permissions:
  pull-requests: write

jobs:
  verify-pull-request:
    env:
      tools: ${{ github.workspace }}/tools
      git: ${{ github.workspace }}/git
    runs-on: ubuntu-latest
    steps:
      - name: Verify Action is Run on a Pull Request Target Event
        if: github.event_name != 'pull_request_target'
        run: exit 1

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Identify Modified Schematics
        run: |
          echo "Finding modified .sch files..."
          git fetch --deepen=${{ github.event.pull_request.commits }}
          MODIFIED_SCH_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD -- 'schematics/**/*.sch')
          MODIFIED_SCH_FILES=$(echo "$MODIFIED_SCH_FILES" | tr '\n' ' ')
          if [ -z "$MODIFIED_SCH_FILES" ]; then
            echo "No new or modified schematics found."
            echo "MODIFIED_SCH_FILES=" >> "$GITHUB_ENV"
          else
            echo "Modified schematics: $MODIFIED_SCH_FILES"
            printf "MODIFIED_SCH_FILES=%s" "$MODIFIED_SCH_FILES" >> "$GITHUB_ENV"
          fi

      - name: Create build dirs
        if: env.MODIFIED_SCH_FILES != ''
        run: |
          mkdir -p ${{ env.tools }}
          mkdir -p ${{ env.git }}

      - name: Install apt packages
        if: env.MODIFIED_SCH_FILES != ''
        run: |
          sudo add-apt-repository ppa:inkscape.dev/stable
          sudo apt-get update
          sudo apt-get install -y tk-dev
          sudo apt-get install -y libxpm-dev
          sudo apt-get install -y inkscape

      - name: Install xschem
        if: env.MODIFIED_SCH_FILES != ''
        run: |
          cd ${{ env.git }}
          git clone --branch 3.4.6 --depth 1 https://github.com/StefanSchippers/xschem.git
          cd xschem
          ./configure --prefix=${{ env.tools }}/xschem
          make -j`nproc`
          make install
          echo "${{ env.tools }}/xschem/bin" >> $GITHUB_PATH

      - name: Install netgen
        if: env.MODIFIED_SCH_FILES != ''
        run: |
          cd ${{ env.git }}
          git clone --depth 1 https://github.com/RTimothyEdwards/netgen.git
          cd netgen
          ./configure --prefix=${{ env.tools }}/netgen
          make -j`nproc`
          make install
          echo "${{ env.tools }}/netgen/bin" >> $GITHUB_PATH

      - name: Install magic
        if: env.MODIFIED_SCH_FILES != ''
        run: |
          git clone --depth 1 https://github.com/RTimothyEdwards/magic
          cd magic
          ./configure --prefix=${{ env.tools }}/magic
          make -j`nproc`
          make install
          echo "${{ env.tools }}/magic/bin" >> $GITHUB_PATH

      - name: Generate PDK files
        if: env.MODIFIED_SCH_FILES != ''
        run: |
          git clone --depth 1 git://opencircuitdesign.com/open_pdks
          cd open_pdks
          ./configure \
           --prefix=${{ env.tools }}/open_pdks \
           --disable-klayout \
           --enable-magic \
           --disable-irsim \
           --disable-openlane \
           --disable-qflow \
           --disable-xcircuit \
           --enable-gf180mcu-pdk \
           --with-gf180mcu-variants=A \
           --disable-verification-gf180mcu \
           --disable-io-gf180mcu \
           --disable-sram-gf180mcu \
           --disable-osu-sc-gf180mcu
          make -j`nproc`
          make install
          make veryclean

      - name: LVS
        if: env.MODIFIED_SCH_FILES != ''
        run: |
          export PDK_ROOT=${{ env.tools }}/open_pdks/share/pdk
          LVS_FILES=$(echo "$MODIFIED_SCH_FILES" | sed 's|schematics/|lvs/|g' | sed 's|.sch|.report|g')
          make $LVS_FILES

      - name: Generate SVGs
        if: env.MODIFIED_SCH_FILES != ''
        run: |
          export PDK_ROOT=${{ env.tools }}/open_pdks/share/pdk
          SVG_FILES=$(echo "$MODIFIED_SCH_FILES" | sed 's|schematics/|svg/|g' | sed 's|.sch|.svg|g')
          make $SVG_FILES

      - name: Upload New SVGs as Artifact
        if: env.MODIFIED_SCH_FILES != ''
        id: artifact-upload
        uses: actions/upload-artifact@v4
        with:
          name: svg-previews
          path: svg/
          retention-days: 7

      - name: Comment on PR with SVG artifact link
        if: env.MODIFIED_SCH_FILES != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.issue.number;
            const runUrl = `https://github.com/${owner}/${repo}/actions/runs/${context.runId}`;
            const artifactUrl = `${{ steps.artifact-upload.outputs.artifact-url }}`;
            const commentBody = `### :art: SVGs Generated :art: \n\n SVGs previews were generated by this [this workflow run](${runUrl}) and can be downloaded [here](${artifactUrl}).`;
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: commentBody
            });
